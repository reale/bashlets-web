#!/bin/bash

################################################################################
#
# |              |    |         |
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-8 Roberto Reale
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################

################################################################################
#
# Original author: Avleen Vig, 2012
# Reworked by:     Josh Cartwright, 2012
#
# See LICENSE for licensing information
#
################################################################################

################################################################################
#
# bashttpd
#
#
# Purpose:
#
#    a simple, configurable HTTP server
#
# Environment variables:
#
#    none
#
# Example of call:
#
#    bashttpd [ -C <BASHTTPD_CONF_FILE> ]
#
# Please refer to the README.md for more advanced usage.
#
################################################################################


#
# library modules/plugins
################################################################################

source bashlets basic/myself
source bashlets http/httpd


#
# global variables
################################################################################

# script version
BASHTTPD_VERSION='0.1'
# default config file
BASHTTPD_CONF_FILE=~/.bashttpd.conf
#BASHTTPD_CONF_FILE="${BASH_SOURCE[0]%/*}"


#
# utilities
################################################################################

#
# error
#
#
# Purpose:
#
#    prints error message and exits
#
# Example of call:
#
#    error <EXIT_CODE> <ERROR_MESSAGE>
#
# Global variables:
#
#    none
#
# Local variables:
#
#    exit_code, error_message
#

function error()
{
	local exit_code=$1
	shift
	local error_message="$@"

	echo "ERROR:  $error_message" >&2
	exit $exit_code
}


#
# usage
#
#
# Purpose:
#
#    prints usage information
#
# Example of call:
#
#    usage
#
# Global variables:
#
#    BASHTTPD_CONF_FILE
#
# Local variables:
#
#    none
#

function usage()
{
    cat <<-EOF
		Usage:

		    $($BASHLETS_NAMESPACE myself get_name) [ -C <BASHTTPD_CONF_FILE> ]

		Options:

		   -C      path to config file [default: $BASHTTPD_CONF_FILE]
		   -h      display this help and exit
		   -V      output version information and exit

	EOF
} 


#
# version
#
#
# Purpose:
#
#    prints version information
#
# Example of call:
#
#    version
#
# Global variables:
#
#    BASHTTPD_VERSION
#
# Local variables:
#
#    none
#

function version()
{
    cat <<-EOF
		$($BASHLETS_NAMESPACE myself get_name) $BASHTTPD_VERSION
	EOF
} 


#
# parsing of command line options
################################################################################

while getopts "C:hV" OPTION
do
    case $OPTION in
		C)
			BASHTTPD_CONF_FILE="$OPTARG"
			;;
		h)
			echo ; version
			echo ; usage
			exit 0
			;;
		V)
			version
			exit
			;;
    esac
done


#
# sanity checks
################################################################################

[[ $UID = 0 ]] && \
	error 1 "It is not recommended to run bashttpd as root"

[ -r "$BASHTTPD_CONF_FILE" ] || \
	error 1 "Configuration file $BASHTTPD_CONF_FILE not found"


#
# read and process input
################################################################################

# Request-Line HTTP RFC 2616 $5.1
read -r line || $BASHLETS_NAMESPACE httpd fail_with 400

# strip trailing CR if it exists
line=${line%%$'\r'}
$BASHLETS_NAMESPACE httpd recv "$line"

# parse first header line
read -r REQUEST_METHOD REQUEST_URI REQUEST_HTTP_VERSION <<< "$line"

[ -n "$REQUEST_METHOD"       ] && \
[ -n "$REQUEST_URI"          ] && \
[ -n "$REQUEST_HTTP_VERSION" ]    \
	|| $BASHLETS_NAMESPACE httpd fail_with 400

# only GET is supported at this time
[ "$REQUEST_METHOD" = "GET" ] || $BASHLETS_NAMESPACE httpd fail_with 405

$BASHLETS_NAMESPACE httpd set_request_method       "$REQUEST_METHOD"
$BASHLETS_NAMESPACE httpd set_request_uri          "$REQUEST_URI"
$BASHLETS_NAMESPACE httpd set_request_http_version "$REQUEST_HTTP_VERSION"

declare -a REQUEST_HEADERS

while read -r line
do
	line=${line%%$'\r'}
	$BASHLETS_NAMESPACE httpd recv "$line"

	# if we've reached the end of the headers, break
	[ -z "$line" ] && break

	REQUEST_HEADERS+=("$line")
done


#
# process directives
################################################################################

source "$BASHTTPD_CONF_FILE"


#
# send closing status code
################################################################################

$BASHLETS_NAMESPACE httpd fail_with 500


# ex: ts=4 sw=4 et filetype=sh noexpandtab
